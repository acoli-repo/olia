****************
* SQUOIA-Morph *
****************

version 0.1
14-6-2011
email: arios@ifi.uzh.ch

------------------
 1. Installation:
------------------

The analyzer needs foma to be installed. Checkout the foma svn repository like this:

svn co http://foma.svn.sourceforge.net/svnroot/foma/trunk/foma

It was necessary to make a small change to one of the source files and to the Makefile, the changed files are in /foma_files. Copy the Makefile and interface.l into the source directory of foma (replacing the original files).

Then compile foma as normal, by 'make' and install by 'make install' (it's really simple, for more detailed instructions see the foma website). Default installation path is /usr/local, if you want to have foma somewhere else, replace the value of 'prefix' in the Makefile (first variable).


---------------------
 2. Use the analyzer
---------------------

2.1. Makefile

There are two slightly different scriptfiles to build analyzers, quechua.foma and quechua-with-translations.foma. The difference is that the former gives only the morphological analysis, whereas the latter gives the Spanish translations for the Quechua roots, for example:
purikamuchkani:
 1. VRoot+Rflx_Int+Cis_Trs+Prog+1.Sg.Subj
 2. =andar+Rflx_Int+Cis_Trs+Prog+1.Sg.Subj

The simplest way to test the analyzers is to use the Makefile, place the path to the (Quechua) textfile you'd like to analyse in the variable TEXTS, and run 'make analysed.txt' or 'make analysed-trans.txt. This will produce the file analysed.txt, consisting of a list of all the tokens in the input text with their morphological analysis like this:

Suyupa 		NRoot+Gen
Hatun   	NRoot
Rimanakuynin    VRoot+Rzpr+Rflx_Int+Inf+3.Sg.Poss
Acuerdo 	SP
Nacional        SP
nisqa   	VRoot+3.Sg.IPst
nisqa   	VRoot+Perf

The Makefile will compile the transducers from the scriptfiles, if necessary.
The second target, 'make failures.txt' creates a list of all the tokens in the text that were not recognized by the transducer. There's one sample text in the archive, the 'Acuerdo Nacional' from 2002, that you can use to test if the compiled analyzer works.


2.2. Using the foma interface

Once you have installed foma, start the interface with (assuming foma is in your PATH):

$ foma

In order to compile the analyzer, do:

foma[0]: source quechua.foma

respectively 

foma[0]: source quechua-with-translations.foma

This will produce the binaries quechua.fst and quechua-with-translations.fst, which than can be used for analysis. You can now analyze word forms with 'apply up' or short 'up':

foma[1]: up takikuni
VRoot+Rflx_Int+1.Sg.Subj

Alternatively, you can build the binary without starting the interface by typing

$ foma -f quechua.foma

To analyze a whole text, you can use the flookup utility that comes with foma (flookup -h gives an overview of the usage). The input text file needs to be tokenized (one word per line) for a flookup.

----------
 3. Files
----------

A short description of the different files can be found in FILES.txt.
A more detailed description of the former implementation in xfst can be found on these websites:

English:
http://kitt.cl.uzh.ch/kitt/quechua/quechua.html
http://kitt.cl.uzh.ch/kitt/quechua/quechua2.html
Spanish:
http://kitt.cl.uzh.ch/kitt/quechua/quechua_SP.html
http://kitt.cl.uzh.ch/kitt/quechua/quechua2_SP.html

For feedback, suggestions, ideas or corrections, please write to arios@ifi.uzh.ch